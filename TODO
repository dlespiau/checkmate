== Checkmate

- autotool build artefact
- -l make flag
- Count make errors as build errors:
  make: *** [modules] Error 2
- options to specify another config file (for when it's impractical to have the
  config file in the git repo itself)
- kdoc warnings
- kdoc warnings for drm and i915 only
- gtkdoc warnings (i-g-t)
- distcheck (i-g-t)
- cppcheck -f -q --template=gcc --enable=all --language=c
- MODE=report/patch? scripts/coccicheck
- Do a do_ensure_collect pass on the configured artefacts to make sure we can
  produce what's being asked (ie check sparse is installed if we're asked to
  generate sparse-warnings)
- do_ensure_collect() should probably be renamed then can_run?
- We should invalidate the DB if .mateconfig changes (keep a checksum of the
  file in .mate)
- show command showing artefacts
- README: explains what artefact and metrics are
- README: add the list of metrics and options
- README: add the list of command line options?
- Expose metrics in a easily parsable format (JSON?) so tools can pick them
  up
- Right now, the sparse metrics are project wide while the default should
  really be per-commit, with the project wide one still as an option.
- Rename compilation-errors to -error?
- some metrics are booleans (compilation-error), should they be treated
  differently

== Maybe one day

- Find a way to make all artefacts part of the git tree so a fetch/push also
  transfers them

== Tests

- test that generates errors (linux-build)
- test that generates warnings (linux-build)
  unknown or invalid syntax)
- A more friendly error message for config errors (say if the artefact name is
- Using a tag as refspec doesn't give a hash (and wong log messaged as well a
- give a non-existent directory to -C
  corrupted DB)
- test verbose option works
